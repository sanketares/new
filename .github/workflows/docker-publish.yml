name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tar: ${{ steps.upload-artifact.outputs.artifact-path }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: my_image:latest

    - name: List Docker images
      run: docker images

    - name: Save Docker image as tar file
      run: |
        if docker images --format "{{.Repository}}:{{.Tag}}" | grep -q "my_image:latest"; then
          docker save my_image:latest -o my_image_latest.tar
        else
          echo "Image my_image:latest not found!"
          exit 1
        fi

    - name: Upload Docker image artifact
      id: upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: my_image_latest.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v3
      with:
        name: docker-image

    - name: Load Docker image
      run: |
        docker load -i my_image_latest.tar

    - name: List Docker images after load
      run: docker images

    - name: Run Docker container
      run: |
        docker run -d --name my_app -p 80:80 my_image:latest

    - name: Verify Docker container
      run: |
        docker ps
        curl --head http://localhost | grep "200 OK"
